SELENIUM

package test_1;

import org.testng.annotations.Test;

public class NewTest1 {
  @Test(priority=5)
  public void test1()
  {
	  System.out.println("in test method");
  }

  @Test(priority=8)
  public void test2()
  {
		  System.out.println("in test2 method");
  }
  @Test(priority=3)
  public void test3()
  {
		  System.out.println("in test3 method");
  }
  
}	



package test_1;

import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class NewTest2                                                     {
  @Test
  public void test1() {
	  System.out.println("in test1 method");
  }
  @BeforeMethod
  public void beforeMethod() {
	  System.out.println("in before method");
  }
  @AfterMethod
  public void afterMethod() {
	  System.out.println("in after method");
  }
  @Test
  public void test2() {
	  System.out.println("in test2 method");
  }
  @BeforeClass
  public void beforeClass() {
	  System.out.println("in before class");
  }
  @AfterClass
  public void afterClass() {
	  System.out.println("in after class");
  }
  @BeforeTest
  public void beforeTest() {
	  System.out.println("in before test");
  }
  @AfterTest
  public void afterTest() {
	  System.out.println("in after test");
  }
  @BeforeSuite
  public void beforeSuite() {
	  System.out.println("in before suite");
  }
  @AfterSuite
  public void afterSuite() {
	  System.out.println("in after suite");
  }
  
}


package test_1;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class NewTest3 {
  @Test(dataProvider="dataDriven")
  public void testData(String username,String password) {
	  System.out.println(username+"\t\t\t"+password);
  }
  @DataProvider
  public Object[][] dataDriven()
  {
	Object[][] obj={{"kim","kim"},{"amr","amr"},{"mal","mal"}};
	return obj;
}
}


package test_1;

import org.testng.Assert;
import org.testng.annotations.Test;

public class NewTest4 {
  @Test
  public void testAsserts() {
	  int x=6;
	  Assert.assertTrue(x>4);
	  String name="kim";
	  Assert.assertEquals(name, "Kim","FALSE");
	System.out.println("test code continue");
  }
}


package test_1;

import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

public class NewTest5 {
  @Test
  public void testAsserts() {
	  SoftAssert soft=new SoftAssert();
	  int x=5;
	  soft.assertTrue(x>9);
	  String name="kim";
	  soft.assertEquals(name,"Kim");
	  System.out.println("test code continue");
	  
	  soft.assertAll();
	  
  }
}


package test_1;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.Test;

public class NewTest6 {
  @Test
  public void testGoogleHomePage() 
  {
	  System.setProperty("webdriver.chrome.driver","src/Drivers/chromedriver.exe");
	  WebDriver driver=new ChromeDriver();
	  driver.get("http://www.google.co.in/");
	  driver.manage().window().maximize();
	  String title=driver.getTitle();
	  Assert.assertEquals(title, "Google");
	  driver.close();
	  
	  
  }
}


SELENIUM methods

package test1;

//import java.sql.Driver;

import org.openqa.selenium.By;

import org.openqa.selenium.WebDriver;
//import org.openqa.selenium.chrome.ChromeDriver;
//import org.openqa.selenium.firefox.FirefoxDriver;
//import org.openqa.selenium.ie.InternetExplorerDriver;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
//import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
import Utility.DriverUtility;
import Utility.ExcelUtility;


public class NewTest1 {
	@Test(dataProvider="dp1")
	//@Parameters("browser")
	public void testLoginDemoShop(String username,String password)
	{
		//System.setProperty("webdriver.chrome.driver","src/test/resources/Drivers/chromedriver.exe");
		//WebDriver driver=new ChromeDriver();
		//System.setProperty("webdriver.ie.driver","src/test/resources/Drivers/IEDriverServer.exe");
		//WebDriver driver=new InternetExplorerDriver();
		//System.setProperty("webdriver.gecko.driver","src/test/resources/Drivers/geckodriver.exe");
		WebDriver driver= DriverUtility.getDriver("chrome");
		driver.get("http://demowebshop.tricentis.com/");
		driver.manage().window().maximize();

		driver.findElement(By.linkText("Log in")).click();
		driver.findElement(By.id("Email")).sendKeys(username);
		driver.findElement(By.id("Password")).sendKeys(password);
		driver.findElement(By.cssSelector("input[value='Log in']")).click();

		Assert.assertTrue(driver.findElement(By.linkText("Log out")).isDisplayed());
		driver.findElement(By.linkText("Log out")).click();



	}
	@DataProvider(name="dp1")
	public Object[][] dataDriven()
	{
		return ExcelUtility.testReadExcel("Sheet1");
	}

}


package test1;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.Test;

import Utility.DriverUtility;

public class NewTest2 {
	
	@Test
	public void testGoogleApps()
	{
		WebDriver driver=DriverUtility.getDriver("chrome");
		driver.get("http://www.google.co.in/");
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		driver.manage().window().maximize();
		//driver.findElement(By.cssSelector("a[title='Google apps']")).click();
		//WebElement ul=driver.findElement(By.cssSelector("ul[jsname='k77Iif']"));
		//WebElement ul=driver.findElement(By.xpath("//div[@id='yDmH0d']/c-wiz/div/div/c-wiz/div/div/ul[1]"));
		WebElement div=driver.findElement(By.id("SIvCob"));
		List<WebElement> list=div.findElements(By.tagName("a"));
		Assert.assertEquals(list.size(),9);
		driver.close();
	}

}

package test1;

//import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import Utility.DriverUtility;

public class NewTest3 {
	WebDriver driver;
	@BeforeClass
	public void beforeClass()
	{
		driver=DriverUtility.getDriver("chrome");
		driver.get("http://10.232.237.143:443/TestMeApp/");
		driver.manage().window().maximize();
		//driver.manage().timeouts().implicitlyWait(20,TimeUnit.SECONDS);
	}
	@AfterClass
	public void afterClass()
	{
		driver.close();
	}
	
	@Test(dataProvider="dp1")
	public void testLoginTestMeApp(String username,String password) throws InterruptedException
	{
		
		driver.findElement(By.partialLinkText("SignIn")).click();
		driver.findElement(By.id("userName")).sendKeys(username);
		driver.findElement(By.id("password")).sendKeys(password);
		driver.findElement(By.name("Login")).click();
		String title=driver.getTitle();
		Assert.assertTrue(title.contains("Home"));
		driver.findElement(By.partialLinkText("SignOut")).click();
		//Thread.sleep(5000);
		WebDriverWait wait=new WebDriverWait(driver,20);
		wait.until(ExpectedConditions.elementToBeClickable(By.partialLinkText("SignIn")));
		
	}
	@DataProvider(name="dp1")
	public Object[][] dataDriven()
	{
		Object[][] obj= {{"Lalitha","Password123"},{"admin","Password456"}};
		return obj;
	}
	
}

package test1;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.Test;

import Utility.DriverUtility;

public class NewTest4 {
	
	@Test
	public void testMenuOptions() throws InterruptedException
	{
	WebDriver driver=DriverUtility.getDriver("chrome");
	driver.manage().window().maximize();
	driver.get("https://www.hdfcbank.com/");
	Thread.sleep(3000);
	
	Actions act1=new Actions(driver);
	act1.moveToElement(driver.findElement(By.xpath("//a[@href='/personal/products']"))).perform();
	Thread.sleep(3000);
	act1.moveToElement(driver.findElement(By.xpath("//a[@href='/personal/products/cards']"))).perform();
	driver.findElement(By.xpath("//a[@href='/personal/products/cards/credit_cards']")).click();
	String url=driver.getCurrentUrl();
	Assert.assertTrue(url.contains("credit_cards"));
	}

}



package test1;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.Test;

import Utility.DriverUtility;

public class NewTest5 {
	@Test
	public void testDragAndDrop() throws InterruptedException
	{
		WebDriver driver=DriverUtility.getDriver("chrome");
		driver.manage().window().maximize();
		driver.get("https://demos.telerik.com/aspnet-ajax/treeview/examples/overview/defaultcs.aspx");
		WebElement from=driver.findElement(By.xpath("//div[@id='ctl00_ContentPlaceholder1_RadTreeView1']/ul/li/ul/li[3]/ul/li[1]/div/div/span"));
		WebElement to=driver.findElement(By.id("ctl00_ContentPlaceholder1_priceChecker"));
		Actions act1=new Actions(driver);
		act1.dragAndDrop(from,to).perform();
		//act1.clickAndHold(from).release(to).perform();
		//Thread.sleep(7000);
		WebDriverWait wait=new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.invisibilityOfElementWithText
				(By.id("ctl00_ContentPlaceholder1_Label1"),"Drop a package here to check price"));
		String price=driver.findElement(By.id("ctl00_ContentPlaceholder1_Label1")).getText();
		System.out.println(" The price details " +price);
	
		Assert.assertTrue(price.endsWith("$3999"));
		
	}
}


                  package test1;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.Test;

import Utility.DriverUtility;

public class NewTest6 {
	@Test
	public void testKeyActions() throws InterruptedException
	{
		WebDriver driver=DriverUtility.getDriver("chrome");
		driver.get("http://10.232.237.143:443/TestMeApp/");
		driver.manage().window().maximize();
		WebElement search=driver.findElement(By.id("myInput"));
		Actions act1=new Actions(driver);
		act1.keyDown(search,Keys.SHIFT).sendKeys("b").pause(3000).keyUp(Keys.SHIFT).sendKeys("a").pause(3000).sendKeys("g").perform();
		Thread.sleep(3000);
		act1.moveToElement(driver.findElement(By.xpath("//div[contains(text(),'Hand bag')]"))).click().perform();
		driver.findElement(By.cssSelector("input[value='FIND DETAILS']")).click();
		
	}
}

package test1;

import java.util.Set;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.testng.annotations.Test;

import Utility.DriverUtility;

public class NewTest7 {

	@Test
	public void testNetBanking() throws InterruptedException
	{
	WebDriver driver=DriverUtility.getDriver("chrome");
	driver.manage().window().maximize();
	driver.get("https://www.hdfcbank.com/");
	Thread.sleep(3000);
	//driver.findElement(By.className("popupCloseButton")).click();
	//Thread.sleep(3000);
	driver.findElement(By.id("loginsubmit")).click();
	String home=driver.getWindowHandle();// the reference of the current window
	Set<String> windowNames=driver.getWindowHandles();
	Object[] windows=windowNames.toArray();
	System.out.println("Window 1 Name : "+ home);
	System.out.println("Window 1 Name : "+ windows[0].toString());
	System.out.println("Window 2 Name : "+ windows[1].toString());
	
	driver.switchTo().window(windows[1].toString());
	driver.manage().window().maximize();
	driver.findElement(By.xpath("/html/body/div[4]/div[2]/div[1]/a")).click();
	driver.switchTo().frame(driver.findElement(By.name("login_page")));
	driver.findElement(By.cssSelector("img[alt='continue']")).click();
	Alert alert=driver.switchTo().alert();
	String alertmessage=alert.getText();
	System.out.println("alert message" +alertmessage);
	alert.accept();
	driver.findElement(By.name("fldLoginUserId")).sendKeys("564752");
	driver.switchTo().window(home);
	//driver.close();
	driver.quit();
	}
}


package test1;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

public class NewTest8 {
	ExtentHtmlReporter reporter;
	ExtentReports reports;
	ExtentTest logger;
	@BeforeClass
	public void beforeClass()
	{
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd-hh-mm-ss-ms");
		
		String filepath=System.getProperty("user.dir")+"/extent-reports/"+sdf.format(new Date())+".html";
		reporter=new ExtentHtmlReporter(filepath);
		reports=new ExtentReports();
		reports.attachReporter(reporter);	
		reporter.config().setDocumentTitle("GFT SELENIUM REPORTS");
		reporter.config().setReportName("End2End Test Automation Reports");
		reporter.config().setTheme(Theme.DARK);

	}
	@AfterClass
	public void endReport()
	{
		reports.flush();
	}
	@AfterMethod
	public void afterMethod(ITestResult result)
	{
		if(result.getStatus()==ITestResult.SUCCESS)
		{
			logger.log(Status.PASS,MarkupHelper.createLabel("The "+result.getMethod().getMethodName()+" Is Passed",ExtentColor.CYAN));
		}
		else if(result.getStatus()==ITestResult.FAILURE)
		{
			logger.log(Status.FAIL,MarkupHelper.createLabel("The "+result.getMethod().getMethodName()+" Is Failed",ExtentColor.LIME));
		}

	}
	@Test
	public void passTest()
	{
		logger=reports.createTest("Pass Test");
		Assert.assertTrue(true);

	}
	@Test
	public void failTest()
	{
		logger=reports.createTest("Fail Test");
		Assert.assertTrue(false);

	}
}


Selenium Utility

package Utility;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;

public class DriverUtility {
  static public WebDriver getDriver(String browser)
  {
  if(browser.equals("chrome"))
  {
	  System.setProperty("webdriver.chrome.driver","src/test/resources/Drivers/chromedriver.exe");
		return new ChromeDriver();
  }
  else if(browser.equals("ie"))
  {
	System.setProperty("webdriver.ie.driver","src/test/resources/Drivers/IEDriverServer.exe");
			return new InternetExplorerDriver(); 
  }
  else if(browser.equals("firefox"))
  {
	  System.setProperty("webdriver.gecko.driver","src/test/resources/Drivers/geckodriver.exe");
		return new FirefoxDriver();
  }
  else
  {
	  return null;
  }
}
}

Excel Utility

package Utility;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
//import org.testng.annotations.Test;

public class ExcelUtility {

	public static Object[][] testReadExcel(String sheetname)
	{
		Object[][] obj=null;
		File file=new File("src/test/resources/testdata/Book1.xlsx");
		try {
			
			InputStream is=new FileInputStream(file);
			XSSFWorkbook workbook=new XSSFWorkbook(is);
			XSSFSheet sheet1=workbook.getSheet(sheetname);
			obj=new Object[sheet1.getLastRowNum()][];
			
			for(int i=1;i<=sheet1.getLastRowNum();i++)
			{
				obj[i-1]=new Object[sheet1.getRow(i).getPhysicalNumberOfCells()];
				for(int j=0;j<sheet1.getRow(i).getPhysicalNumberOfCells();j++)
				{
					obj[i-1][j]=sheet1.getRow(i).getCell(j).getStringCellValue();
					System.out.print(sheet1.getRow(i).getCell(j).getStringCellValue()+"\t");
				}
				System.out.println("");
			}
			workbook.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return obj;
	}

}


Selenium Case Study

package testmeapp.tests;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

import testmeapp.utility.Drivers;

public class OnlineShoppingTest {
	WebDriver driver;
	ExtentHtmlReporter reporter;
	ExtentReports reports;
	ExtentTest logger;


	@Test(priority=3)
	public void testCart() throws Exception
	{
		logger=reports.createTest("TestCart");
		WebElement search=driver.findElement(By.id("myInput"));
		Actions act1=new Actions(driver);
		act1.keyDown(search,Keys.SHIFT).sendKeys("b").pause(1000).keyUp(Keys.SHIFT).sendKeys("a").pause(1000).sendKeys("g").perform();
		Thread.sleep(3000);
		act1.moveToElement(driver.findElement(By.xpath("//div[contains(text(),'Hand bag')]"))).click().perform();

		driver.findElement(By.cssSelector("input[value='FIND DETAILS']")).click();
		if(driver.getTitle().equals("Search")) {
			logger.log(Status.PASS,MarkupHelper.createLabel("Passed", ExtentColor.BROWN));
		}
		else 
		{
			Assert.assertTrue(false);
		}

		driver.findElement(By.partialLinkText("Add to cart")).click();

		driver.findElement(By.partialLinkText("Cart")).click();
		//String url=driver.getCurrentUrl();
		//Assert.assertTrue(url.contains("Cart"));




		//System.out.println("in testCart method");
	}
	@Test(priority=2)
	public void testLogin()
	{
		logger=reports.createTest("testLogin");
		//driver.findElement(By.partialLinkText("SignIn")).click();
		driver.findElement(By.id("userName")).sendKeys("Amrutha76");
		driver.findElement(By.id("password")).sendKeys("ammu123");
		driver.findElement(By.name("Login")).click();
		//String title=driver.getTitle();
		//Assert.assertTrue(title.contains("login"));
		if(driver.getTitle().equals("Home"))
		{
			logger.log(Status.PASS,MarkupHelper.createLabel("Passed", ExtentColor.BROWN));
		}
		else 
		{
			Assert.assertTrue(false);
		}



	}
	@Test(priority=4)
	public void testPayment() throws InterruptedException
	{
		logger=reports.createTest("TestPayment");
		driver.findElement(By.partialLinkText("Checkout")).click();
		Thread.sleep(3000);
		driver.findElement(By.cssSelector("input[value='Proceed to Pay']")).click();
		driver.findElement(By.xpath("//label[contains(text(),'HDFC Bank')]")).click();
		//driver.findElement(By.className("radio-btns"));\
		//driver.findElement(By.xpath("//*[@id=\"swit\"]/div[2]/div")).click();
		//driver.findElement(By.xpath("//*[@id=\"swit\"]/div[2]/div/label/input")).click();
		driver.findElement(By.id("btn")).click();
		SoftAssert soft=new SoftAssert();
		
		if(driver.getTitle().equals("Payment Gatewa"))
		{
			logger.log(Status.PASS,MarkupHelper.createLabel("Passed", ExtentColor.BROWN));
		}
		else 
			 soft.assertTrue(false);

		driver.findElement(By.name("username")).sendKeys("123457");
		driver.findElement(By.name("password")).sendKeys("Pass@457");
		driver.findElement(By.cssSelector("input[value='LOGIN']")).click();
		driver.findElement(By.name("transpwd")).sendKeys("Trans@457");
		driver.findElement(By.cssSelector("input[value='PayNow']")).click();
		//String url=driver.getCurrentUrl();
		//Assert.assertTrue(url.contains("PaymentGateway"));
		 soft.assertAll();

		
	}
	@Test(priority=1,enabled =true)
	public void testRegistration()
	{ 
		logger=reports.createTest("TestRegistration");
		driver.findElement(By.xpath("//*[@id=\"header\"]/div[1]/div/div/div[2]/div/ul/li[2]/a")).click();
		driver.findElement(By.id("userName")).sendKeys("Amrutha77");
		driver.findElement(By.id("firstName")).sendKeys("amrutha");
		driver.findElement(By.id("lastName")).sendKeys("mallela");
		driver.findElement(By.id("password")).sendKeys("ammu123");
		driver.findElement(By.name("confirmPassword")).sendKeys("ammu123");
		driver.findElement(By.id("gender"));
		driver.findElement(By.cssSelector("input[value='Female']")).click();
        driver.findElement(By.id("emailAddress")).sendKeys("ammu@email.com");
		driver.findElement(By.id("mobileNumber")).sendKeys("9906786890");
		// driver.findElement(By.id("dob")).sendKeys("12/31/1997");
		driver.findElement(By.xpath("/html/body/main/div/div/form/fieldset/div/div[9]/div/div/img")).click();
		Select year = new Select(driver.findElement(By.className("ui-datepicker-year")));
		year.selectByVisibleText("1997");
		Select month=new Select(driver.findElement(By.className("ui-datepicker-month")));
		month.selectByVisibleText("Dec");
		driver.findElement(By.linkText("31")).click();
		driver.findElement(By.id("address")).sendKeys("Sindhanur");
		Select question=new Select(driver.findElement(By.id("securityQuestion")));
		List<WebElement>options= question.getOptions();
		question.selectByIndex(1);
		driver.findElement(By.id("answer")).sendKeys("black");
		driver.findElement(By.name("Submit")).click();
		//String title=driver.getTitle();
		//Assert.assertTrue(title.contains("Home"));
		if(driver.getTitle().equals("Login"))
			logger.log(Status.PASS,MarkupHelper.createLabel("Passed", ExtentColor.INDIGO));
		else 
			Assert.assertTrue(false);



	}


	@AfterMethod(enabled=true)
	public void getResult(ITestResult result) {

		if(result.getStatus()==ITestResult.SUCCESS)
		{
			logger.log(Status.PASS,MarkupHelper.createLabel("The "+result.getMethod().getMethodName()+" Is Passed",ExtentColor.CYAN));
		}
		else if(result.getStatus()==ITestResult.FAILURE)
		{
			logger.log(Status.FAIL,MarkupHelper.createLabel("The "+result.getMethod().getMethodName()+" Is Failed",ExtentColor.LIME));
		}

	}


	@BeforeTest
	public void startReport() {
		driver=Drivers.getDriver("chrome");
		driver.get("http://10.232.237.143:443/TestMeApp/");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd-hh-mm-ss-ms");
		String filepath=System.getProperty("user.dir")+"/extent-reports/"+sdf.format(new Date())+".html";
		reporter=new ExtentHtmlReporter(filepath);
		reports=new ExtentReports();
		reports.attachReporter(reporter);	
		reporter.config().setDocumentTitle("GFT SELENIUM REPORTS");
		reporter.config().setReportName("End2End TestMe Automation Reports");
		reporter.config().setTheme(Theme.DARK);



	}
	@AfterTest
	public void endReport() {
		//driver.close();
		reports.flush();
	}

}



Cucumber Test
package skeleton;

import org.junit.Assert;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class ShoutStepDefs {
	Person saun=new Person();
	@Given("Saun is {int} meters away from Lucia")
	public void saun_is_meters_away_from_Lucia(Integer distance) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		saun.setDistance(distance);
		
	}

	@When("Saun shouts {string}")
	public void saun_shouts(String message) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		saun.setMessage(message);
	}

	@Then("Lucia listens to the message")
	public void lucia_listens_to_the_message() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		String message=saun.getMessage();
		
		Assert.assertEquals("Free Coffee", message);
		
	}
	@Given("{word} has {int} cucumber(s) in her bag")
	public void she_has_cucumbers_in_her_bag(String type,int x ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		System.out.println("the bag has"+x +type);
	}



}

Cucumber main

package skeleton;

public class Person {

	
	int distance;
	String message;

	public void setDistance(Integer distance) {
		// TODO Auto-generated method stub
		this.distance=distance;
		
	}
	public void setMessage(String message) {
		// TODO Auto-generated method stub
		this.message=message;
		
	}
	public String getMessage() {
		// TODO Auto-generated method stub
		return this.message;
	}

}

Cucumber Feature file


Feature: Shout Feature

  Scenario: Saun and Lucia are within the range
    Given Saun is 20 meters away from Lucia
    When Saun shouts "Free Coffee"
    Then Lucia listens to the message


Cucumber Tests
package skeleton;

import java.util.List;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;

import Utility.Drivers;
import Utility.PageClass;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;


public class LoginDemoWebshopStepDefs {
	WebDriver driver;
	public  LoginDemoWebshopStepDefs() {
		driver=Drivers.getDriver("chrome");
		PageFactory.initElements(driver,PageClass.class);
	}
	
	@Given("The Login URL of Demo Web Shop")
	public void the_Login_URL_of_Demo_Web_Shop() {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		
		driver.get("http://demowebshop.tricentis.com/login");
		Assert.assertTrue(driver.getTitle().contains("Login"));
	}

	@When("User enters {string} as username")
	public void user_enters_as_username(String username) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		PageClass.email.sendKeys(username);
	}

	@When("User enters {string} as passsword")
	public void user_enters_as_passsword(String password) {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		PageClass.password.sendKeys(password);
		
	}

	@When("User clicks on Signin")
	public void user_clicks_on_Signin() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		PageClass.Login.click();
		
	}

	@Then("User is in shopping page")
	public void user_is_in_shopping_page() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		Assert.assertTrue(driver.findElement(By.linkText("Log out")).isDisplayed());
		PageClass.Logout.click();
	}
	@Given("Below are my grades")
	public void below_are_my_grades(io.cucumber.datatable.DataTable dataTable) {
	    // Write code here that turns the phrase above into concrete actions
	    // For automatic transformation, change DataTable to one of
	    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
	    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
	    // Double, Byte, Short, Long, BigInteger or BigDecimal.
	    //
	    // For other transformations you can register a DataTableType.
	    //throw new cucumber.api.PendingException();
		List<List<String>> data=dataTable.asLists();
		for(List<String>listouter:data)
		{
			for(String s:listouter) {
				System.out.println(s+"\t");
			}
			System.out.println("");
		}
	}





}

Cucucmber runner
package skeleton;

import org.junit.runner.RunWith;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;

@RunWith(Cucumber.class)
@CucumberOptions(plugin = {"pretty","html:src/cucumber-reports"},
		features = {"src/test/resources/skeleton/logindemowebshop.feature "
				//"src/test/resources/skeleton/shout.feature"
				},dryRun=false,monochrome=true,tags= {"@ui"}
)
public class CucumberRunner {

}


 Cucumber Feature file

Feature: LoginDemoWebshop feature

  @ui
  Scenario Outline: Valid Login To Demo Webshop Scenario
    Given The Login URL of Demo Web Shop
    When User enters "<username>" as username
    And User enters "<password>" as passsword
    And User clicks on Signin
    Then User is in shopping page

    Examples: 
      | username          | password |
      | askmail@email.com | abc123   |
      | askmail@ymail.com | abc123   |
      | askmail@gmail.com | abc123   |

  @nonui
  Scenario: Data Table Without a header - Step Level
    Given Below are my grades
      | English | A |
      | Maths   | B |
      | Science | S |

Feature: Bag Feature

  Scenario: Sarah has cucumbers in her bag
    Given Sarah has 5000 cucumbers in her bag
    Given Sarah has 1 cucumber in her bag
    Given She has 0 cucumbers in her bag

Cucumber Case Study
package skeleton;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.Assert;
//import org.junit.asserts.SoftAssert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

import Utility.Drivers;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;


public class Test_meStepDefs {
	WebDriver driver;
	@Given("The  URL of TestMeApp")
	public void the_URL_of_TestMeApp() {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver=Drivers.getDriver("chrome");
		driver.get("http://10.232.237.143:443/TestMeApp/RegisterUser.htm");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		Assert.assertTrue(driver.getTitle().contains("Sign Up"));
	}

	@When("User enters {string} as username")
	public void user_enters_as_username(String username) {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.id("userName")).sendKeys(username);
		
	}

	@When("User enters {string} as firstName")
	public void user_enters_as_firstName(String firstName ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("firstName")).sendKeys(firstName);
	}

	@When("User enters {string} as lastName")
	public void user_enters_as_lastName(String lastName) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("lastName")).sendKeys(lastName);
	}

	@When("User enters {string} as passsword")
	public void user_enters_as_passsword(String password ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("password")).sendKeys(password);
	}

	@When("User enters {string} as confirmPassword")
	public void user_enters_as_confirmPassword(String confirmPassword ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.name("confirmPassword")).sendKeys(confirmPassword);
	}

	@When("User enters {string} as gender")
	public void user_enters_as_gender(String string ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("gender"));
		driver.findElement(By.cssSelector("input[value='Female']")).click();
	}

	@When("User enters {string} as emailAddress")
	public void user_enters_as_emailAddress(String emailAddress) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("emailAddress")).sendKeys(emailAddress);
		
	}

	@When("User enters {string} as mobileNumber")
	public void user_enters_as_mobileNumber(String mobileNumber) {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.id("mobileNumber")).sendKeys(mobileNumber);
	}

	@When("User enters {string} as dob")
	public void user_enters_as_dob(String dob) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("dob")).sendKeys(dob);
	}

	@When("User enters {string} as address")
	public void user_enters_as_address(String address) {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.id("address")).sendKeys(address);
	}

	@When("User selects {string} as securityQuestion")
	public void user_selects_as_securityQuestion(String string) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		Select question=new Select(driver.findElement(By.id("securityQuestion")));
		List<WebElement>options= question.getOptions();
		question.selectByIndex(1);
	}

	@When("User enters {string} as answer")
	public void user_enters_as_answer(String answer ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("answer")).sendKeys(answer);
	}

	@When("User clicks on Register")
	public void user_clicks_on_Register() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.name("Submit")).click();
	}

	@Then("User is in Login page")
	public void user_is_in_Login_page() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		Assert.assertTrue(driver.getTitle().contains("Login"));
		
	}
	@Given("The Login URL of test me Login")
	public void the_Login_URL_of_test_me_Login() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver=Drivers.getDriver("chrome");
		driver.get("http://10.232.237.143:443/TestMeApp/login.htm");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		Assert.assertTrue(driver.getTitle().contains("Login"));
	}
	/*@When("User enters {string} as username")
	public void user_enters_as_username(String username) {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.id("userName")).sendKeys(username);
		
	}
	@When("User enters {string} as passsword")
	public void user_enters_as_passsword(String password ) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.id("password")).sendKeys(password);
	}*/

	@When("User clicks on Login")
	public void user_clicks_on_Login() {
	    // Write code here that turns the phrase above into concrete actions
	  //throw new cucumber.api.PendingException();
		driver.findElement(By.name("Login")).click();
	}

	@Then("User is in Homepage")
	public void user_is_in_Homepage() {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		Assert.assertTrue(driver.getTitle().contains("Home"));
		
	}
	@When("User enters head")
	public void user_enters_head() throws InterruptedException {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		WebElement search=driver.findElement(By.id("myInput"));
		Actions act1=new Actions(driver);
		act1.keyDown(search,Keys.SHIFT).sendKeys("h").pause(1000).keyUp(Keys.SHIFT).sendKeys("e").pause(1000).sendKeys("a").pause(1000).sendKeys("d").perform();
		Thread.sleep(3000);
		act1.moveToElement(driver.findElement(By.xpath("//div[contains(text(),'Headphone')]"))).click().perform();

	}

	@When("User clicks on FindDetails")
	public void user_clicks_on_FindDetails() {
		
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		//SoftAssert soft=new SoftAssert();
		driver.findElement(By.cssSelector("input[value='FIND DETAILS']")).click();
		Assert.assertTrue(driver.findElement(By.partialLinkText("Cart")).isDisplayed());
		driver.findElement(By.linkText("Cart")).click();
	
	}

	@When("User clicks on AddToCart")
	public void user_clicks_on_AddToCart() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		
		driver.findElement(By.partialLinkText("Add to cart")).click();
	}

	@When("User clicks on Cart")
	public void user_clicks_on_Cart() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.partialLinkText("Cart")).click();
	}

	@When("User clicks on Checkout")
	public void user_clicks_on_Checkout() throws InterruptedException {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.partialLinkText("Checkout")).click();
		Thread.sleep(3000);
	}

	@When("User clicks on ProceedToPay")
	public void user_clicks_on_ProceedToPay() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.cssSelector("input[value='Proceed to Pay']")).click();
	}

	@When("User clicks on HDFCBank")
	public void user_clicks_on_HDFCBank() {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.xpath("//label[contains(text(),'HDFC Bank')]")).click();
	}

	@When("User clicks on Continue")
	public void user_clicks_on_Continue() {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.id("btn")).click();
	}

	@When("User enters {string} as uname")
	public void user_enters_as_uname(String string1) {
	    // Write code here that turns the phrase above into concrete actions
	   // throw new cucumber.api.PendingException();
		driver.findElement(By.name("username")).sendKeys(string1);
	}

	@When("User enters {string} as pwd")
	public void user_enters_as_pwd(String string2) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.name("password")).sendKeys(string2);
	}

	@When("User clicks on login")
	public void user_clicks_on_login() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.cssSelector("input[value='LOGIN']")).click();
	}

	@When("User enters {string} as TransactionPassword")
	public void user_enters_as_TransactionPassword(String string3) {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.name("transpwd")).sendKeys(string3);
	}

	@When("User clicks on PayNow")
	public void user_clicks_on_PayNow() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		driver.findElement(By.cssSelector("input[value='PayNow']")).click();
	}

	@Then("User is in OrderDetails")
	public void user_is_in_OrderDetails() {
	    // Write code here that turns the phrase above into concrete actions
	    //throw new cucumber.api.PendingException();
		Assert.assertTrue(driver.getTitle().contains("Order Details"));
	}





}

Cucumber Runner

package skeleton;
import org.junit.runner.RunWith;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;

@RunWith(Cucumber.class)
@CucumberOptions(plugin = {"pretty","html:src/cucumber-reports"},

features = {"src/test/resources/skeleton/Test_Me_Login.feature"},dryRun=false,monochrome=true,tags={"@Login"}
//"src/test/resources/skeleton/Test_Me"},dryRun=true,monochrome=true
)		
public class CucumberRunner {

}



Cucumber Feature file

login
Feature: Test_me_Login feature

  @Login
  Scenario Outline: Valid Login To TestMe app Scenario
    Given The Login URL of test me Login
    When User enters "<username>" as username
    And User enters "<password>" as passsword
    And User clicks on Login
    Then User is in Homepage
    When User enters head
    And User clicks on FindDetails
    And User clicks on AddToCart
    And User clicks on Cart
    And User clicks on Checkout
    And User clicks on ProceedToPay
    And User clicks on HDFCBank
    And User clicks on Continue
    And User enters "123457" as uname
    And User enters "Pass@457" as pwd
    And User clicks on login
    And User enters "Trans@457" as TransactionPassword
    And User clicks on PayNow
    Then User is in OrderDetails

    Examples: 
      | username | password |
      | AlexUser | Alex123 |


Registration
Feature: Test_me_registration feature
 @Registration
  Scenario: Valid Registration To TestMe app Scenario
  
    Given The  URL of TestMeApp
    When User enters "AlexUser" as username
    And User enters "Amrutha" as firstName
    And User enters "Mallela" as lastName
    And User enters "Alex123" as passsword
    And User enters "Alex123" as confirmPassword
    And User enters "Female" as gender
    And User enters "ammu@email.com" as emailAddress
    And User enters "9906786890" as mobileNumber
    And User enters "12/31/1997" as dob
    And User enters "Sindhanur" as address
    And User selects "What is your favour color?" as securityQuestion
    And User enters "black" as answer
    And User clicks on Register
    Then User is in Login page
    
    
    
----------------------------------------------------------------------------------------

package PageObjectModel;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

public class PageClass {
WebDriver driver;
By Inc=By.linkText("Log in");
By uname=By.name("Email");
By pwd=By.name("Password");
By lin=By.xpath("//input[@value='Log in']");
public PageClass(WebDriver driver) {
	this.driver=driver;
}
public void clicklink() {
	driver.findElement(Inc).click();
}
public void typeuname(String username) {
	driver.findElement(uname).sendKeys("aravind.guggilla57@gmail.com");
}
public void typepassword(String password) {
	driver.findElement(pwd).sendKeys("aravind");
}
public void clickonloginlyn() {
	driver.findElement(lin).click();
}
}
   



package PageObjectModel;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class Page1{
public static void main(String args[]) {
System.setProperty("webdriver.chrome.driver","C:\\NexGen Testing Stream NEW\\Chrome Driver\\chromedriver.exe");
WebDriver driver=new ChromeDriver();
PageClass PObject=new PageClass(driver);
driver.get("http://demowebshop.tricentis.com/");
driver.manage().window().maximize();
PObject.clicklink();
String username=null;
PObject.typeuname(username);
String password=null;
PObject.typepassword(password);
PObject.clickonloginlyn();
System.out.println("title of the page is"+driver.getTitle());
}
}
----------------------------------------------------------------------------------------------------------------------------------------

package PageObjectModel;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.How;

public class PageClass2 {
WebDriver driver;
@FindBy(how=How.LINK_TEXT,using="Log in") WebElement login;
@FindBy(how=How.ID,using="Email") WebElement username;
@FindBy(how=How.NAME,using="Password") WebElement password;
@FindBy(how=How.XPATH,using="//input[@value='Log in']") WebElement log;

public PageClass2(WebDriver driver) {
	this.driver=driver;
}

public void loginMethod(String uid,String pwd) {
	login.click();
	username.sendKeys(uid);
	password.sendKeys(pwd);
	log.click();
}
}





package PageObjectModel;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.Test;

public class NewTest {
  
@Test
public void f() {
	System.setProperty("webdriver.chrome.driver","C:\\NexGen Testing Stream NEW\\Chrome Driver\\chromedriver.exe");
	WebDriver driver=new ChromeDriver();
	driver.get("http://demowebshop.tricentis.com/");
	driver.manage().window().maximize();
	driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
	
	PageClass2 locateElements =PageFactory.initElements(driver, PageClass2.class);
	locateElements.loginMethod("aravind.guggilla57@gmail.com","aravind");
	
	
  }
}
-----------------------------------------------------------------------------------------------------------------------------------------------


